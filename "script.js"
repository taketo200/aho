
"use client";
import React from "react";

function MainComponent() {
  const [email, setEmail] = React.useState("");
  const [password, setPassword] = React.useState("");
  const [errors, setErrors] = React.useState({});

  const validateForm = () => {
    const newErrors = {};
    if (!email) newErrors.email = "メールアドレスを入力してください";
    else if (!/\S+@\S+\.\S+/.test(email))
      newErrors.email =
        "メールアドレスは「ユーザー名@ドメイン」形式で入力してください";
    if (!password) newErrors.password = "パスワードを入力してください";
    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (validateForm()) {
      try {
        const response = await fetch("/login", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ email, password }),
        });

        if (response.ok) {
          window.location.href = "/admin";
        } else {
          const data = await response.json();
          setErrors(data.errors || { general: "ログインに失敗しました" });
        }
      } catch (error) {
        setErrors({ general: "ネットワークエラーが発生しました" });
      }
    }
  };

  const handleRegisterClick = () => {
    window.location.href = "/register";
  };

  return (
    <div className="min-h-screen bg-[#f9f5f1] flex flex-col items-center justify-center font-arial">
      <div className="w-full max-w-3xl">
        <div className="bg-white mb-8 p-4 flex justify-between items-center">
          <div className="flex-grow"></div>
          <h1 className="text-[2em] font-crimson-text text-[#5d4037] text-center">
            FashionablyLate
          </h1>
          <div className="flex-grow flex justify-end">
            <button
              onClick={handleRegisterClick}
              className="px-4 py-2 bg-[#f0e8e0] text-[#5d4037] rounded hover:bg-[#e0d8d0] transition-colors duration-300 font-crimson-text"
            >
              register
            </button>
          </div>
        </div>
        <h2 className="text-[1.5em] font-crimson-text text-[#5d4037] text-center mb-6">
          Login
        </h2>
        <div className="bg-white p-8 rounded-lg shadow-md">
          <form onSubmit={handleSubmit}>
            <div className="mb-4">
              <label
                htmlFor="email"
                className="block text-sm font-medium text-[#5d4037] mb-1"
              >
                メールアドレス
              </label>
              <input
                type="email"
                id="email"
                name="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                className="w-full px-3 py-2 border border-[#d3d3d3] rounded-md focus:outline-none focus:ring-1 focus:ring-[#5d4037]"
                placeholder="例: test@example.com"
              />
              {errors.email && (
                <p className="text-red-500 text-xs mt-1">{errors.email}</p>
              )}
            </div>
            <div className="mb-6">
              <label
                htmlFor="password"
                className="block text-sm font-medium text-[#5d4037] mb-1"
              >
                パスワード
              </label>
              <input
                type="password"
                id="password"
                name="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="w-full px-3 py-2 border border-[#d3d3d3] rounded-md focus:outline-none focus:ring-1 focus:ring-[#5d4037]"
                placeholder="例: coachurchin65"
              />
              {errors.password && (
                <p className="text-red-500 text-xs mt-1">{errors.password}</p>
              )}
            </div>
            {errors.general && (
              <p className="text-red-500 text-sm mb-4">{errors.general}</p>
            )}
            <button
              type="submit"
              className="w-full bg-[#6d4a3d] text-white py-2 h-[40px] rounded-md hover:bg-[#56382d] transition-colors duration-300 font-crimson-text"
            >
              ログイン
            </button>
          </form>
        </div>
      </div>
    </div>
  );
}

export default MainComponent;
